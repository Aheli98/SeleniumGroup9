<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="12" total="23" passed="8" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-10-12T20:22:07 IST" name="Suite" finished-at="2020-10-12T20:26:43 IST" duration-ms="276197">
    <groups>
    </groups>
    <test started-at="2020-10-12T20:22:07 IST" name="Test" finished-at="2020-10-12T20:26:43 IST" duration-ms="276197">
      <class name="com.SauceDemo.TestCases.TC_Cancel_007">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.SauceDemo.TestCases.TC_Cancel_007@6e0dec4a]" started-at="2020-10-12T20:26:19 IST" name="setup" finished-at="2020-10-12T20:26:33 IST" duration-ms="13915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="click_to_cancel()[pri:0, instance:com.SauceDemo.TestCases.TC_Cancel_007@6e0dec4a]" started-at="2020-10-12T20:26:33 IST" name="click_to_cancel" finished-at="2020-10-12T20:26:38 IST" duration-ms="5534" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- click_to_cancel -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_Cancel_007@6e0dec4a]" started-at="2020-10-12T20:26:38 IST" name="screenShot" finished-at="2020-10-12T20:26:38 IST" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=click_to_cancel status=SUCCESS method=TC_Cancel_007.click_to_cancel()[pri:0, instance:com.SauceDemo.TestCases.TC_Cancel_007@6e0dec4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:com.SauceDemo.TestCases.TC_Cancel_007@6e0dec4a]" started-at="2020-10-12T20:26:38 IST" name="closebrowser" finished-at="2020-10-12T20:26:42 IST" duration-ms="3794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- com.SauceDemo.TestCases.TC_Cancel_007 -->
      <class name="com.SauceDemo.TestCases.TC_CheckOutTest_005">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.SauceDemo.TestCases.TC_CheckOutTest_005@49c386c8]" started-at="2020-10-12T20:25:24 IST" name="setup" finished-at="2020-10-12T20:25:36 IST" duration-ms="12183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkout()[pri:0, instance:com.SauceDemo.TestCases.TC_CheckOutTest_005@49c386c8]" started-at="2020-10-12T20:25:36 IST" name="checkout" finished-at="2020-10-12T20:25:43 IST" duration-ms="6455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkout -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_CheckOutTest_005@49c386c8]" started-at="2020-10-12T20:25:43 IST" name="screenShot" finished-at="2020-10-12T20:25:43 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkout status=SUCCESS method=TC_CheckOutTest_005.checkout()[pri:0, instance:com.SauceDemo.TestCases.TC_CheckOutTest_005@49c386c8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:com.SauceDemo.TestCases.TC_CheckOutTest_005@49c386c8]" started-at="2020-10-12T20:25:43 IST" name="closebrowser" finished-at="2020-10-12T20:25:46 IST" duration-ms="2342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- com.SauceDemo.TestCases.TC_CheckOutTest_005 -->
      <class name="com.SauceDemo.TestCases.TC_LoginTest_001">
        <test-method is-config="true" signature="startTest()[pri:0, instance:com.SauceDemo.TestCases.TC_LoginTest_001@2b6faea6]" started-at="2020-10-12T20:22:07 IST" name="startTest" finished-at="2020-10-12T20:22:07 IST" duration-ms="330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.SauceDemo.TestCases.TC_LoginTest_001@2b6faea6]" started-at="2020-10-12T20:22:07 IST" name="setup" finished-at="2020-10-12T20:22:46 IST" duration-ms="39175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="LoginTest()[pri:0, instance:com.SauceDemo.TestCases.TC_LoginTest_001@2b6faea6]" started-at="2020-10-12T20:22:46 IST" name="LoginTest" finished-at="2020-10-12T20:22:51 IST" duration-ms="4965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginTest_001@2b6faea6]" started-at="2020-10-12T20:22:51 IST" name="screenShot" finished-at="2020-10-12T20:22:53 IST" duration-ms="2048" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=TC_LoginTest_001.LoginTest()[pri:0, instance:com.SauceDemo.TestCases.TC_LoginTest_001@2b6faea6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:com.SauceDemo.TestCases.TC_LoginTest_001@2b6faea6]" started-at="2020-10-12T20:22:53 IST" name="closebrowser" finished-at="2020-10-12T20:23:02 IST" duration-ms="8157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
        <test-method is-config="true" signature="EndTest()[pri:0, instance:com.SauceDemo.TestCases.TC_LoginTest_001@2b6faea6]" started-at="2020-10-12T20:26:42 IST" name="EndTest" finished-at="2020-10-12T20:26:43 IST" duration-ms="965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTest -->
      </class> <!-- com.SauceDemo.TestCases.TC_LoginTest_001 -->
      <class name="com.SauceDemo.TestCases.TC_ContinueShopping_006">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.SauceDemo.TestCases.TC_ContinueShopping_006@56528192]" started-at="2020-10-12T20:25:46 IST" name="setup" finished-at="2020-10-12T20:26:01 IST" duration-ms="15192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="shopping()[pri:0, instance:com.SauceDemo.TestCases.TC_ContinueShopping_006@56528192]" started-at="2020-10-12T20:26:01 IST" name="shopping" finished-at="2020-10-12T20:26:07 IST" duration-ms="5965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shopping -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_ContinueShopping_006@56528192]" started-at="2020-10-12T20:26:07 IST" name="screenShot" finished-at="2020-10-12T20:26:11 IST" duration-ms="4032" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shopping status=SUCCESS method=TC_ContinueShopping_006.shopping()[pri:0, instance:com.SauceDemo.TestCases.TC_ContinueShopping_006@56528192] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:com.SauceDemo.TestCases.TC_ContinueShopping_006@56528192]" started-at="2020-10-12T20:26:11 IST" name="closebrowser" finished-at="2020-10-12T20:26:19 IST" duration-ms="7810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- com.SauceDemo.TestCases.TC_ContinueShopping_006 -->
      <class name="com.SauceDemo.TestCases.TC_AddToCartTest_004">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.SauceDemo.TestCases.TC_AddToCartTest_004@1f0f1111]" started-at="2020-10-12T20:25:00 IST" name="setup" finished-at="2020-10-12T20:25:14 IST" duration-ms="13651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Addingtocart()[pri:0, instance:com.SauceDemo.TestCases.TC_AddToCartTest_004@1f0f1111]" started-at="2020-10-12T20:25:14 IST" name="Addingtocart" finished-at="2020-10-12T20:25:20 IST" duration-ms="5759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Addingtocart -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_AddToCartTest_004@1f0f1111]" started-at="2020-10-12T20:25:20 IST" name="screenShot" finished-at="2020-10-12T20:25:20 IST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Addingtocart status=SUCCESS method=TC_AddToCartTest_004.Addingtocart()[pri:0, instance:com.SauceDemo.TestCases.TC_AddToCartTest_004@1f0f1111] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:com.SauceDemo.TestCases.TC_AddToCartTest_004@1f0f1111]" started-at="2020-10-12T20:25:20 IST" name="closebrowser" finished-at="2020-10-12T20:25:24 IST" duration-ms="4284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- com.SauceDemo.TestCases.TC_AddToCartTest_004 -->
      <class name="com.SauceDemo.TestCases.TC_FilterProductTest_003">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.SauceDemo.TestCases.TC_FilterProductTest_003@670002]" started-at="2020-10-12T20:24:14 IST" name="setup" finished-at="2020-10-12T20:24:45 IST" duration-ms="31503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="productfiltering()[pri:0, instance:com.SauceDemo.TestCases.TC_FilterProductTest_003@670002]" started-at="2020-10-12T20:24:45 IST" name="productfiltering" finished-at="2020-10-12T20:24:55 IST" duration-ms="9622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productfiltering -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_FilterProductTest_003@670002]" started-at="2020-10-12T20:24:55 IST" name="screenShot" finished-at="2020-10-12T20:24:56 IST" duration-ms="943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=productfiltering status=SUCCESS method=TC_FilterProductTest_003.productfiltering()[pri:0, instance:com.SauceDemo.TestCases.TC_FilterProductTest_003@670002] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:com.SauceDemo.TestCases.TC_FilterProductTest_003@670002]" started-at="2020-10-12T20:24:56 IST" name="closebrowser" finished-at="2020-10-12T20:25:00 IST" duration-ms="4738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- com.SauceDemo.TestCases.TC_FilterProductTest_003 -->
      <class name="com.SauceDemo.TestCases.TC_LoginDDT_002">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:23:02 IST" name="setup" finished-at="2020-10-12T20:23:24 IST" duration-ms="22299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:23:35 IST" name="loginDDT" data-provider="LoginData" finished-at="2020-10-12T20:23:45 IST" duration-ms="10518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:23:45 IST" name="screenShot" finished-at="2020-10-12T20:23:46 IST" duration-ms="534" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginDDT status=SUCCESS method=TC_LoginDDT_002.loginDDT(java.lang.String, java.lang.String)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:23:46 IST" name="loginDDT" data-provider="LoginData" finished-at="2020-10-12T20:23:50 IST" duration-ms="4040" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[locked_out_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sausage]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //button[text()='Open Menu']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-P3PP6HUN', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 81.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200930150533, moz:geckodriverVersion: 0.25.0, moz:headless: false, moz:processID: 19300, moz:profile: C:\Users\AYUSI\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: b8d99892-956a-4578-94ad-a1828f9798a2
*** Element info: {Using=xpath, value=//button[text()='Open Menu']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //button[text()='Open Menu']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-P3PP6HUN', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 81.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200930150533, moz:geckodriverVersion: 0.25.0, moz:headless: false, moz:processID: 19300, moz:profile: C:\Users\AYUSI\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: b8d99892-956a-4578-94ad-a1828f9798a2
*** Element info: {Using=xpath, value=//button[text()='Open Menu']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.SauceDemo.PageObjects.LoginPage.OpenMenu(LoginPage.java:61)
at com.SauceDemo.TestCases.TC_LoginDDT_002.loginDDT(TC_LoginDDT_002.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:23:50 IST" name="screenShot" finished-at="2020-10-12T20:23:50 IST" duration-ms="211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginDDT status=FAILURE method=TC_LoginDDT_002.loginDDT(java.lang.String, java.lang.String)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:23:50 IST" name="loginDDT" data-provider="LoginData" finished-at="2020-10-12T20:23:54 IST" duration-ms="3855" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[problemFacinguser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_saucer]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //button[text()='Open Menu']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-P3PP6HUN', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 81.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200930150533, moz:geckodriverVersion: 0.25.0, moz:headless: false, moz:processID: 19300, moz:profile: C:\Users\AYUSI\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: b8d99892-956a-4578-94ad-a1828f9798a2
*** Element info: {Using=xpath, value=//button[text()='Open Menu']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //button[text()='Open Menu']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-P3PP6HUN', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 81.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200930150533, moz:geckodriverVersion: 0.25.0, moz:headless: false, moz:processID: 19300, moz:profile: C:\Users\AYUSI\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: b8d99892-956a-4578-94ad-a1828f9798a2
*** Element info: {Using=xpath, value=//button[text()='Open Menu']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.SauceDemo.PageObjects.LoginPage.OpenMenu(LoginPage.java:61)
at com.SauceDemo.TestCases.TC_LoginDDT_002.loginDDT(TC_LoginDDT_002.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:23:54 IST" name="screenShot" finished-at="2020-10-12T20:23:54 IST" duration-ms="193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginDDT status=FAILURE method=TC_LoginDDT_002.loginDDT(java.lang.String, java.lang.String)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:23:54 IST" name="loginDDT" data-provider="LoginData" finished-at="2020-10-12T20:23:59 IST" duration-ms="4385" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[standard_user101]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //button[text()='Open Menu']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-P3PP6HUN', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 81.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200930150533, moz:geckodriverVersion: 0.25.0, moz:headless: false, moz:processID: 19300, moz:profile: C:\Users\AYUSI\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: b8d99892-956a-4578-94ad-a1828f9798a2
*** Element info: {Using=xpath, value=//button[text()='Open Menu']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //button[text()='Open Menu']
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-P3PP6HUN', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 81.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20200930150533, moz:geckodriverVersion: 0.25.0, moz:headless: false, moz:processID: 19300, moz:profile: C:\Users\AYUSI\AppData\Loca..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: b8d99892-956a-4578-94ad-a1828f9798a2
*** Element info: {Using=xpath, value=//button[text()='Open Menu']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.SauceDemo.PageObjects.LoginPage.OpenMenu(LoginPage.java:61)
at com.SauceDemo.TestCases.TC_LoginDDT_002.loginDDT(TC_LoginDDT_002.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:23:59 IST" name="screenShot" finished-at="2020-10-12T20:23:59 IST" duration-ms="124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginDDT status=FAILURE method=TC_LoginDDT_002.loginDDT(java.lang.String, java.lang.String)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method signature="loginDDT(java.lang.String, java.lang.String)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:23:59 IST" name="loginDDT" data-provider="LoginData" finished-at="2020-10-12T20:24:08 IST" duration-ms="9320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[performance_glitch_user]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secret_sauce]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginDDT -->
        <test-method is-config="true" signature="screenShot(org.testng.ITestResult)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:24:08 IST" name="screenShot" finished-at="2020-10-12T20:24:08 IST" duration-ms="268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginDDT status=SUCCESS method=TC_LoginDDT_002.loginDDT(java.lang.String, java.lang.String)[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShot -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:com.SauceDemo.TestCases.TC_LoginDDT_002@778d1062]" started-at="2020-10-12T20:24:08 IST" name="closebrowser" finished-at="2020-10-12T20:24:14 IST" duration-ms="5181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- com.SauceDemo.TestCases.TC_LoginDDT_002 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
